{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js\";\nimport './PeopleList.css';\nimport { updatePerson, deletePerson } from '../services/people';\nimport { Dragable } from './Dragable';\n\n// this is an example of a functional component\n// using the arrow function syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeopleList = props => {\n  // destructure props\n  const {\n    people,\n    setPeople,\n    age,\n    name\n  } = props;\n  // more event handlers\n  const handleDelete = id => deletePerson(id).then(() => setPeople(people.filter(person => person.id !== id)));\n  const handleUpdate = id => updatePerson(id, name, age).then(response => setPeople(people.map(person => person.id === id ? response.person : person)));\n  const displayElements = people.map((person // list comprehension\n  ) => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"Person-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Person-info\",\n      children: [person.name, \" is \", person.age, \" years old\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Button-delete\",\n      onClick: () => handleDelete(person.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Button-update\",\n      onClick: () => handleUpdate(person.id),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)]\n  }, person.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n  const dragableElements = displayElements.map((person, i) => ({\n    person,\n    active: true,\n    id: i\n  }));\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"People-list\",\n    children: /*#__PURE__*/_jsxDEV(Dragable, {\n      calculateTitle: item => item.name + \"is \" + item.age + \" years old\",\n      setItemData: setPeople,\n      itemData: dragableElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = PeopleList;\nexport { PeopleList };\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["updatePerson","deletePerson","Dragable","jsxDEV","_jsxDEV","PeopleList","props","people","setPeople","age","name","handleDelete","id","then","filter","person","handleUpdate","response","map","displayElements","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dragableElements","i","active","calculateTitle","item","setItemData","itemData","_c","$RefreshReg$"],"sources":["/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js"],"sourcesContent":["import './PeopleList.css'\nimport { updatePerson, deletePerson } from '../services/people'\nimport { Dragable } from './Dragable'\n\n// this is an example of a functional component\n// using the arrow function syntax\nconst PeopleList = props => {\n  // destructure props\n  const { people, setPeople, age, name } = props\n  // more event handlers\n  const handleDelete = id =>\n    deletePerson(id).then(() =>\n      setPeople(people.filter(person => person.id !== id))\n    )\n\n  const handleUpdate = id =>\n    updatePerson(id, name, age).then(response =>\n      setPeople(\n        people.map(person => (person.id === id ? response.person : person))\n      )\n    )\n\n  const displayElements = people.map(\n    (\n      person // list comprehension\n    ) => (\n        <li key={person.id} className='Person-item'>\n          <span className='Person-info'>\n            {person.name} is {person.age} years old\n          </span>\n          <button\n            className='Button-delete'\n            onClick={() => handleDelete(person.id)}\n          >\n            Delete\n          </button>\n          <button\n            className='Button-update'\n            onClick={() => handleUpdate(person.id)}\n          >\n            Update\n          </button>\n        </li>\n      ))\n\n  const dragableElements = displayElements.map(\n    (person, i) => ({ person, active: true, id: i })\n  )\n\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return (\n    <ul className='People-list'>\n      <Dragable\n        calculateTitle = { (item) => item.name + \"is \" + item.age + \" years old\"}\n        setItemData = { setPeople }\n        itemData = { dragableElements }\n      />\n    </ul>\n  )\n}\n\nexport { PeopleList }\n"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,SAASA,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AAC/D,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAC1B;EACA,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGJ,KAAK;EAC9C;EACA,MAAMK,YAAY,GAAGC,EAAE,IACrBX,YAAY,CAACW,EAAE,CAAC,CAACC,IAAI,CAAC,MACpBL,SAAS,CAACD,MAAM,CAACO,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACH,EAAE,KAAKA,EAAE,CAAC,CACrD,CAAC;EAEH,MAAMI,YAAY,GAAGJ,EAAE,IACrBZ,YAAY,CAACY,EAAE,EAAEF,IAAI,EAAED,GAAG,CAAC,CAACI,IAAI,CAACI,QAAQ,IACvCT,SAAS,CACPD,MAAM,CAACW,GAAG,CAACH,MAAM,IAAKA,MAAM,CAACH,EAAE,KAAKA,EAAE,GAAGK,QAAQ,CAACF,MAAM,GAAGA,MAAO,CACpE,CACF,CAAC;EAEH,MAAMI,eAAe,GAAGZ,MAAM,CAACW,GAAG,CAChC,CACEH,MAAM,CAAC;EAAA,kBAELX,OAAA;IAAoBgB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACzCjB,OAAA;MAAMgB,SAAS,EAAC,aAAa;MAAAC,QAAA,GAC1BN,MAAM,CAACL,IAAI,EAAC,MAAI,EAACK,MAAM,CAACN,GAAG,EAAC,YAC/B;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPrB,OAAA;MACEgB,SAAS,EAAC,eAAe;MACzBM,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACI,MAAM,CAACH,EAAE,CAAE;MAAAS,QAAA,EACxC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MACEgB,SAAS,EAAC,eAAe;MACzBM,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACD,MAAM,CAACH,EAAE,CAAE;MAAAS,QAAA,EACxC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,GAfFV,MAAM,CAACH,EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgBd,CACL,CAAC;EAEN,MAAME,gBAAgB,GAAGR,eAAe,CAACD,GAAG,CAC1C,CAACH,MAAM,EAAEa,CAAC,MAAM;IAAEb,MAAM;IAAEc,MAAM,EAAE,IAAI;IAAEjB,EAAE,EAAEgB;EAAE,CAAC,CACjD,CAAC;;EAGD;EACA;EACA;EACA,oBACExB,OAAA;IAAIgB,SAAS,EAAC,aAAa;IAAAC,QAAA,eACzBjB,OAAA,CAACF,QAAQ;MACP4B,cAAc,EAAMC,IAAI,IAAKA,IAAI,CAACrB,IAAI,GAAG,KAAK,GAAGqB,IAAI,CAACtB,GAAG,GAAG,YAAa;MACzEuB,WAAW,EAAKxB,SAAW;MAC3ByB,QAAQ,EAAKN;IAAkB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAAAS,EAAA,GAxDK7B,UAAU;AA0DhB,SAASA,UAAU;AAAE,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}