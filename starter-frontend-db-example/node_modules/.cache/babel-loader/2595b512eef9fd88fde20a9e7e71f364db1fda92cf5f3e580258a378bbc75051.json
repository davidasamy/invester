{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js\";\nimport './PeopleList.css';\nimport { updatePerson, deletePerson } from '../services/people';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PeopleList(props) {\n  // destructure props\n  const {\n    people,\n    setPeople,\n    age,\n    name\n  } = props;\n  // more event handlers\n  const handleDelete = id => deletePerson(id).then(() => setPeople(people.filter(person => person.id !== id)));\n  const handleUpdate = id => updatePerson(id, name, age).then(response => setPeople(people.map(person => person.id === id ? response.person : person)));\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"People-list\",\n    children: people.map(person =>\n    /*#__PURE__*/\n    // list comprehension\n    _jsxDEV(\"li\", {\n      className: \"Person-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Person-info\",\n        children: [person.name, \" is \", person.age, \" years old\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-delete\",\n        onClick: () => handleDelete(person.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-update\",\n        onClick: () => handleUpdate(person.id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n_c = PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["updatePerson","deletePerson","jsxDEV","_jsxDEV","PeopleList","props","people","setPeople","age","name","handleDelete","id","then","filter","person","handleUpdate","response","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js"],"sourcesContent":["import './PeopleList.css'\nimport { updatePerson, deletePerson } from '../services/people'\n\nfunction PeopleList (props) {\n\n    // destructure props\n    const { people, setPeople, age, name } = props\n    // more event handlers\n    const handleDelete = id =>\n      deletePerson(id).then(() =>\n        setPeople(people.filter(person => person.id !== id))\n      )\n  \n    const handleUpdate = id =>\n      updatePerson(id, name, age).then(response =>\n        setPeople(\n          people.map(person => (person.id === id ? response.person : person))\n        )\n      )\n  \n    // note: the map function is used to iterate over the people array\n    // and return a list of JSX elements. this is a common pattern in react\n    // and is called a \"list comprehension\"\n    return (\n      <ul className='People-list'>\n          {people.map(person => (   // list comprehension\n            <li key={person.id} className='Person-item'>\n              <span className='Person-info'>\n                {person.name} is {person.age} years old\n              </span>\n              <button\n                className='Button-delete'\n                onClick={() => handleDelete(person.id)}\n              >\n                Delete\n              </button>\n              <button\n                className='Button-update'\n                onClick={() => handleUpdate(person.id)}\n              >\n                Update\n              </button>\n            </li>\n          ))}\n        </ul>\n    )\n  }"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,SAASA,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,UAAUA,CAAEC,KAAK,EAAE;EAExB;EACA,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGJ,KAAK;EAC9C;EACA,MAAMK,YAAY,GAAGC,EAAE,IACrBV,YAAY,CAACU,EAAE,CAAC,CAACC,IAAI,CAAC,MACpBL,SAAS,CAACD,MAAM,CAACO,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACH,EAAE,KAAKA,EAAE,CAAC,CACrD,CAAC;EAEH,MAAMI,YAAY,GAAGJ,EAAE,IACrBX,YAAY,CAACW,EAAE,EAAEF,IAAI,EAAED,GAAG,CAAC,CAACI,IAAI,CAACI,QAAQ,IACvCT,SAAS,CACPD,MAAM,CAACW,GAAG,CAACH,MAAM,IAAKA,MAAM,CAACH,EAAE,KAAKA,EAAE,GAAGK,QAAQ,CAACF,MAAM,GAAGA,MAAO,CACpE,CACF,CAAC;;EAEH;EACA;EACA;EACA,oBACEX,OAAA;IAAIe,SAAS,EAAC,aAAa;IAAAC,QAAA,EACtBb,MAAM,CAACW,GAAG,CAACH,MAAM;IAAA;IAAQ;IACxBX,OAAA;MAAoBe,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACzChB,OAAA;QAAMe,SAAS,EAAC,aAAa;QAAAC,QAAA,GAC1BL,MAAM,CAACL,IAAI,EAAC,MAAI,EAACK,MAAM,CAACN,GAAG,EAAC,YAC/B;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPpB,OAAA;QACEe,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAEA,CAAA,KAAMd,YAAY,CAACI,MAAM,CAACH,EAAE,CAAE;QAAAQ,QAAA,EACxC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpB,OAAA;QACEe,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACD,MAAM,CAACH,EAAE,CAAE;QAAAQ,QAAA,EACxC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAfFT,MAAM,CAACH,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBd,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEX;AAACE,EAAA,GA3CMrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}