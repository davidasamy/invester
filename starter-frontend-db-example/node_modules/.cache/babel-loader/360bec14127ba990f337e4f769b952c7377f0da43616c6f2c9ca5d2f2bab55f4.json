{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/fastapi-starter/starter-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css'; // import css file\nimport { useEffect, useState } from 'react'; // import react hooks\n\n// import functions from services folder\nimport { create, getAll, deletePerson, updatePerson } from './services/people';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PeopleList(props) {\n  // destructure props\n  const {\n    people,\n    handleDelete,\n    handleUpdate,\n    age,\n    name\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"People-list\",\n    children: people.map(person =>\n    /*#__PURE__*/\n    // list comprehension\n    _jsxDEV(\"li\", {\n      className: \"Person-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Person-info\",\n        children: [person.name, \" is \", person.age, \" years old\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-delete\",\n        onClick: () => handleDelete(person.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button-update\",\n        onClick: () => handleUpdate(person.id),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, person.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n// App component\n_c = PeopleList;\nfunction App() {\n  _s();\n  // useState hooks to store state.\n  // usage: const [state, setState] = useState(initialState)\n  // note that every time you call setState, the component will re-render\n  const [age, setAge] = useState('');\n  const [name, setName] = useState('');\n  const [people, setPeople] = useState([]);\n\n  // useEffect hook to make API call when component mounts\n  // usage: useEffect(callback, [dependencies])\n  // if you pass an empty array as the second argument, the callback will only\n  // be called once, when the component mounts\n  useEffect(() => {\n    getAll().then(response => {\n      setPeople(response.people);\n    });\n  }, []);\n\n  // event handlers helper functions. update state and make calls\n  // to the backend through the services functions\n\n  // note that react handles the state locally so that you don't need\n  // to refresh the page to see the changes. this is what makes react\n  // so powerful\n  const handleSubmit = e => {\n    e.preventDefault(); // prevent default form submission page refresh\n    setAge(''); // clear the\n    setName(''); // input fields\n\n    // call the create function from services/people.js and update local state\n    create(name, age).then(response => setPeople([...people, response.person]));\n  };\n\n  // return the JSX that will be rendered. this is another powerful feature\n  // of react. JSX is a syntax extension to javascript that allows us to\n  // write HTML-like code inside javascript.\n  //\n  // note: the return statement can only return one element, so we wrap\n  // everything in a div\n  //\n  // note: you can use javascript expressions inside JSX by wrapping them\n  // in curly braces. this is how we can use the state variables in our JSX\n  //\n  // note: the className attribute is used instead of class\n  // this is because class is a reserved keyword in javascript\n  //\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  //\n  // note: we pass the event handlers as props to the PeopleList component\n  // so that they can be used there. this is called \"prop drilling\" and is\n  // a common pattern in react.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"App-header\",\n      children: \"Add People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Form-input\",\n        type: \"text\",\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"Form-input\",\n        type: \"number\",\n        placeholder: \"Enter age\",\n        value: age,\n        onChange: e => setAge(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Form-button\",\n        type: \"submit\",\n        children: \"Add Person\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PeopleList, {\n      people: people,\n      age: age,\n      name: name,\n      handleDelete: handleDelete,\n      handleUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"40bodUMWS7xFxbfMc9CbqCvRZxc=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PeopleList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","create","getAll","deletePerson","updatePerson","jsxDEV","_jsxDEV","PeopleList","props","people","handleDelete","handleUpdate","age","name","className","children","map","person","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","App","_s","setAge","setName","setPeople","then","response","handleSubmit","e","preventDefault","onSubmit","type","placeholder","value","onChange","target","_c2","$RefreshReg$"],"sources":["/Users/emm12/repos/fastapi-starter/starter-frontend/src/App.js"],"sourcesContent":["import './App.css' // import css file\r\nimport { useEffect, useState } from 'react' // import react hooks\r\n\r\n// import functions from services folder\r\nimport { create, getAll, deletePerson, updatePerson } from './services/people'\r\n\r\nfunction PeopleList (props) {\r\n\r\n  // destructure props\r\n  const { people, handleDelete, handleUpdate, age, name } = props\r\n\r\n  return (\r\n    <ul className='People-list'>\r\n        {people.map(person => (                         // list comprehension\r\n          <li key={person.id} className='Person-item'>\r\n            <span className='Person-info'>\r\n              {person.name} is {person.age} years old\r\n            </span>\r\n            <button\r\n              className='Button-delete'\r\n              onClick={() => handleDelete(person.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              className='Button-update'\r\n              onClick={() => handleUpdate(person.id)}\r\n            >\r\n              Update\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n  )\r\n}\r\n\r\n// App component\r\nfunction App () {\r\n\r\n  // useState hooks to store state.\r\n  // usage: const [state, setState] = useState(initialState)\r\n  // note that every time you call setState, the component will re-render\r\n  const [age, setAge] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [people, setPeople] = useState([])\r\n\r\n  // useEffect hook to make API call when component mounts\r\n  // usage: useEffect(callback, [dependencies])\r\n  // if you pass an empty array as the second argument, the callback will only\r\n  // be called once, when the component mounts\r\n  useEffect(() => {\r\n    getAll().then(response => {\r\n      setPeople(response.people)\r\n    })\r\n  }, [])\r\n\r\n  // event handlers helper functions. update state and make calls\r\n  // to the backend through the services functions\r\n\r\n  // note that react handles the state locally so that you don't need\r\n  // to refresh the page to see the changes. this is what makes react\r\n  // so powerful\r\n  const handleSubmit = e => {\r\n    e.preventDefault()  // prevent default form submission page refresh\r\n    setAge('')          // clear the\r\n    setName('')         // input fields\r\n\r\n    // call the create function from services/people.js and update local state\r\n    create(name, age).then(response => setPeople([...people, response.person]))\r\n  }\r\n\r\n  // return the JSX that will be rendered. this is another powerful feature\r\n  // of react. JSX is a syntax extension to javascript that allows us to\r\n  // write HTML-like code inside javascript.\r\n  //\r\n  // note: the return statement can only return one element, so we wrap\r\n  // everything in a div\r\n  //\r\n  // note: you can use javascript expressions inside JSX by wrapping them\r\n  // in curly braces. this is how we can use the state variables in our JSX\r\n  //\r\n  // note: the className attribute is used instead of class\r\n  // this is because class is a reserved keyword in javascript\r\n  //\r\n  // note: the map function is used to iterate over the people array\r\n  // and return a list of JSX elements. this is a common pattern in react\r\n  // and is called a \"list comprehension\"\r\n  //\r\n  // note: we pass the event handlers as props to the PeopleList component\r\n  // so that they can be used there. this is called \"prop drilling\" and is\r\n  // a common pattern in react.\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1 className='App-header'>Add People</h1>\r\n      <form className='Form' onSubmit={handleSubmit}>\r\n        <input\r\n          className='Form-input'\r\n          type='text'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <input\r\n          className='Form-input'\r\n          type='number'\r\n          placeholder='Enter age'\r\n          value={age}\r\n          onChange={e => setAge(e.target.value)}\r\n        />\r\n        <button className='Form-button' type='submit'>\r\n          Add Person\r\n        </button>\r\n      </form>\r\n      <PeopleList\r\n        people={people}\r\n        age={age}\r\n        name={name}\r\n        handleDelete={handleDelete}\r\n        handleUpdate={handleUpdate}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}