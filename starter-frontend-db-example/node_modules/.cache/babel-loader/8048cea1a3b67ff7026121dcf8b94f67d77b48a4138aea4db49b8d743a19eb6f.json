{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js\";\nimport './PeopleList.css';\nimport { updatePerson, deletePerson } from '../services/people';\nimport { Dragable } from './Dragable';\n\n// this is an example of a functional component\n// using the arrow function syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeopleList = props => {\n  // destructure props\n  const {\n    people,\n    setPeople,\n    age,\n    name\n  } = props;\n  // more event handlers\n  const handleDelete = id => deletePerson(id).then(() => setPeople(people.filter(person => person.id !== id)));\n  const handleUpdate = id => updatePerson(id, name, age).then(response => setPeople(people.map(person => person.id === id ? response.person : person)));\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"People-list\",\n    children: /*#__PURE__*/_jsxDEV(Dragable, {\n      calculateTitle: item => item.name + \"is \" + item.age + \" years old\",\n      setItemData: setPeople,\n      itemData: people\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = PeopleList;\nexport { PeopleList };\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["updatePerson","deletePerson","Dragable","jsxDEV","_jsxDEV","PeopleList","props","people","setPeople","age","name","handleDelete","id","then","filter","person","handleUpdate","response","map","className","children","calculateTitle","item","setItemData","itemData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js"],"sourcesContent":["import './PeopleList.css'\nimport { updatePerson, deletePerson } from '../services/people'\nimport { Dragable } from './Dragable'\n\n// this is an example of a functional component\n// using the arrow function syntax\nconst PeopleList = props => {\n  // destructure props\n  const { people, setPeople, age, name } = props\n  // more event handlers\n  const handleDelete = id =>\n    deletePerson(id).then(() =>\n      setPeople(people.filter(person => person.id !== id))\n    )\n\n  const handleUpdate = id =>\n    updatePerson(id, name, age).then(response =>\n      setPeople(\n        people.map(person => (person.id === id ? response.person : person))\n      )\n    )\n\n\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return (\n    <ul className='People-list'>\n      <Dragable\n        calculateTitle = { (item) => item.name + \"is \" + item.age + \" years old\" }\n        setItemData = {setPeople}\n        itemData = {people}\n      />\n    </ul>\n  )\n}\n\nexport { PeopleList }\n"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,SAASA,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AAC/D,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAC1B;EACA,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGJ,KAAK;EAC9C;EACA,MAAMK,YAAY,GAAGC,EAAE,IACrBX,YAAY,CAACW,EAAE,CAAC,CAACC,IAAI,CAAC,MACpBL,SAAS,CAACD,MAAM,CAACO,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACH,EAAE,KAAKA,EAAE,CAAC,CACrD,CAAC;EAEH,MAAMI,YAAY,GAAGJ,EAAE,IACrBZ,YAAY,CAACY,EAAE,EAAEF,IAAI,EAAED,GAAG,CAAC,CAACI,IAAI,CAACI,QAAQ,IACvCT,SAAS,CACPD,MAAM,CAACW,GAAG,CAACH,MAAM,IAAKA,MAAM,CAACH,EAAE,KAAKA,EAAE,GAAGK,QAAQ,CAACF,MAAM,GAAGA,MAAO,CACpE,CACF,CAAC;;EAIH;EACA;EACA;EACA,oBACEX,OAAA;IAAIe,SAAS,EAAC,aAAa;IAAAC,QAAA,eACzBhB,OAAA,CAACF,QAAQ;MACPmB,cAAc,EAAMC,IAAI,IAAKA,IAAI,CAACZ,IAAI,GAAG,KAAK,GAAGY,IAAI,CAACb,GAAG,GAAG,YAAc;MAC1Ec,WAAW,EAAIf,SAAU;MACzBgB,QAAQ,EAAIjB;IAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAAAC,EAAA,GA9BKxB,UAAU;AAgChB,SAASA,UAAU;AAAE,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}