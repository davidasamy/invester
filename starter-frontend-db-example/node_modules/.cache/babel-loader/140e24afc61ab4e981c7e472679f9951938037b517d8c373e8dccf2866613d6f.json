{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js\";\nimport './PeopleList.css';\nimport { updatePerson, deletePerson } from '../services/people';\n\n// this is an example of a functional component\n// using the arrow function syntax\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeopleList = props => {\n  // destructure props\n  const {\n    people,\n    setPeople,\n    age,\n    name\n  } = props;\n  // more event handlers\n  const handleDelete = id => deletePerson(id).then(() => setPeople(people.filter(person => person.id !== id)));\n  const handleUpdate = id => updatePerson(id, name, age).then(response => setPeople(people.map(person => person.id === id ? response.person : person)));\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"People-list\",\n    children: /*#__PURE__*/_jsxDEV(Dragable, {\n      itemData: people.map((person // list comprehension\n      ) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"Person-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"Person-info\",\n          children: [person.name, \" is \", person.age, \" years old\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Button-delete\",\n          onClick: () => handleDelete(person.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Button-update\",\n          onClick: () => handleUpdate(person.id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = PeopleList;\nexport { PeopleList };\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["updatePerson","deletePerson","jsxDEV","_jsxDEV","PeopleList","props","people","setPeople","age","name","handleDelete","id","then","filter","person","handleUpdate","response","map","className","children","Dragable","itemData","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/emm12/repos/fastapi-starter/starter-frontend/src/components/PeopleList.js"],"sourcesContent":["import './PeopleList.css'\nimport { updatePerson, deletePerson } from '../services/people'\n\n// this is an example of a functional component\n// using the arrow function syntax\nconst PeopleList = props => {\n  // destructure props\n  const { people, setPeople, age, name } = props\n  // more event handlers\n  const handleDelete = id =>\n    deletePerson(id).then(() =>\n      setPeople(people.filter(person => person.id !== id))\n    )\n\n  const handleUpdate = id =>\n    updatePerson(id, name, age).then(response =>\n      setPeople(\n        people.map(person => (person.id === id ? response.person : person))\n      )\n    )\n\n  // note: the map function is used to iterate over the people array\n  // and return a list of JSX elements. this is a common pattern in react\n  // and is called a \"list comprehension\"\n  return (\n    <ul className='People-list'>\n      <Dragable itemData= { people.map(\n        (\n          person // list comprehension\n        ) => (\n          <li key={person.id} className='Person-item'>\n            <span className='Person-info'>\n              {person.name} is {person.age} years old\n            </span>\n            <button\n              className='Button-delete'\n              onClick={() => handleDelete(person.id)}\n            >\n              Delete\n            </button>\n            <button\n              className='Button-update'\n              onClick={() => handleUpdate(person.id)}\n            >\n              Update\n            </button>\n          </li>\n        )\n      )}/>\n    </ul>\n  )\n}\n\nexport { PeopleList }\n"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,SAASA,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;;AAE/D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAC1B;EACA,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGJ,KAAK;EAC9C;EACA,MAAMK,YAAY,GAAGC,EAAE,IACrBV,YAAY,CAACU,EAAE,CAAC,CAACC,IAAI,CAAC,MACpBL,SAAS,CAACD,MAAM,CAACO,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACH,EAAE,KAAKA,EAAE,CAAC,CACrD,CAAC;EAEH,MAAMI,YAAY,GAAGJ,EAAE,IACrBX,YAAY,CAACW,EAAE,EAAEF,IAAI,EAAED,GAAG,CAAC,CAACI,IAAI,CAACI,QAAQ,IACvCT,SAAS,CACPD,MAAM,CAACW,GAAG,CAACH,MAAM,IAAKA,MAAM,CAACH,EAAE,KAAKA,EAAE,GAAGK,QAAQ,CAACF,MAAM,GAAGA,MAAO,CACpE,CACF,CAAC;;EAEH;EACA;EACA;EACA,oBACEX,OAAA;IAAIe,SAAS,EAAC,aAAa;IAAAC,QAAA,eACzBhB,OAAA,CAACiB,QAAQ;MAACC,QAAQ,EAAIf,MAAM,CAACW,GAAG,CAC9B,CACEH,MAAM,CAAC;MAAA,kBAEPX,OAAA;QAAoBe,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACzChB,OAAA;UAAMe,SAAS,EAAC,aAAa;UAAAC,QAAA,GAC1BL,MAAM,CAACL,IAAI,EAAC,MAAI,EAACK,MAAM,CAACN,GAAG,EAAC,YAC/B;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPtB,OAAA;UACEe,SAAS,EAAC,eAAe;UACzBQ,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACI,MAAM,CAACH,EAAE,CAAE;UAAAQ,QAAA,EACxC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtB,OAAA;UACEe,SAAS,EAAC,eAAe;UACzBQ,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAACD,MAAM,CAACH,EAAE,CAAE;UAAAQ,QAAA,EACxC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAfFX,MAAM,CAACH,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBd,CAER;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAET,CAAC;AAAAE,EAAA,GA9CKvB,UAAU;AAgDhB,SAASA,UAAU;AAAE,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}